<?xml version="1.0"?>
<!--

totallyTyped: Enabling this will make Psalm very strict, such that it needs to
be able to evaluate the type of every single statement, and emitting a bevy of
Mixed* issues if the types cannot be determined. Defaults to false.

allowCoercionFromStringToClassConst: When true, strings can be coerced to
class-string, with Psalm emitting a TypeCoercion issue. If disabled, that issue
changes to a more serious one. Defaults to false.

allowStringToStandInForClass: When true, strings can be used as classes, meaning
$some_string::someMethod() is allowed. If false, only class constant strings
(of the form Foo\Bar::class) can stand in for classes, otherwise an
InvalidStringClass issue is emitted. Defaults to false.

addParamDefaultToDocblockType: Occasionally a param default will not match up
with the docblock type. By default, Psalm emits an issue. Setting this flag to
true causes it to expand the param type to include the param default. Defaults
to false.

checkForThrowsDocblock: When true, Psalm will check that the developer has
supplied @throws docblocks for every exception thrown in a given function or
method. Defaults to false.

checkForThrowsInGlobalScope: When true, Psalm will check that the developer has
caught every exception in global scope. Defaults to false.

findUnusedVariablesAndParams: When true, Psalm will attempt to find all unused
variables, the equivalent of running with \-\-find-unused-variables. Defaults to
false.

findUnusedCode: When true, Psalm will attempt to find all unused code (including
unused variables), the equivalent of running with \-\-find-unused-code. Defaults
to false.

ensureArrayStringOffsetsExist: When true, Psalm will complain when referencing
an explicit string offset on an array e.g. $arr['foo'] without a user first
asserting that it exists (either via an isset check or via an object-like
array). Defaults to false.

hideExternalErrors: whether or not to show issues in files that are used by your
project files, but which are not included in <projectFiles>. Defaults to false.

cacheDirectory: The directory used to store Psalm's cache data - if you specify
one (and it does not already exist), its parent directory must already exist,
otherwise Psalm will throw an error.

-->
<psalm
        name="Psalm configuration for Booka CLI"

        errorLevel="8"

        strictBinaryOperands="true"
        allowStringToStandInForClass="true"
        addParamDefaultToDocblockType="true"
        checkForThrowsDocblock="true"
        checkForThrowsInGlobalScope="true"
        findUnusedVariablesAndParams="true"
        findUnusedCode="true"
        ensureArrayStringOffsetsExist="true"
        throwExceptionOnError="false"
        hideExternalErrors="true"
        cacheDirectory="./tmp"
        errorBaseline="psalm-baseline.xml"
>
    <!-- https://github.com/vimeo/psalm/blob/master/docs/issues.md //-->
    <projectFiles>
        <directory name="src"/>
        <ignoreFiles>
            <directory name="vendor"/>
        </ignoreFiles>
    </projectFiles>
    <issueHandlers>
        <!-- @todo find a positive way to define these and remove suppression -->
        <PossiblyUndefinedStringArrayOffset errorLevel="suppress"/>
        <DeprecatedMethod errorLevel="suppress"/>
        <PossiblyNullArrayAccess errorLevel="suppress"/>
        <PossiblyNullArgument errorLevel="suppress"/>
        <PossiblyUnusedMethod errorLevel="suppress" />
    </issueHandlers>
</psalm>
